library IEEE;
use IEEE.std_logic_1164.all;

entity Keyboard_Reader is
port( CLK,Reset,DAV,ACK : IN STD_LOGIC;
		DAC, Kack, Dval : OUT STD_LOGIC;
		K : in std_logic_vector(3 downto 0);
		Dout: out std_logic_vector(3 downto 0)
		
);
end;

architecture arq_Keyboard_Reader of Keyboard_Reader is

component Ring_Buffer IS
	PORT( MCLK,reset : IN STD_LOGIC;
			DAV, CTS: IN STD_LOGIC;
			DAC, Wreg : OUT STD_LOGIC;
			Din : IN STD_LOGIC_VECTOR(3 downto 0);
			Q : OUT STD_LOGIC_VECTOR(3 downto 0)
  );
end component;


component Output_Buffer IS
	PORT( MCLK,reset : IN STD_LOGIC;
			Load, ACK: IN STD_LOGIC;
			Dval, OBfree : OUT STD_LOGIC;
			Din : IN STD_LOGIC_VECTOR(3 downto 0);
			Q : OUT STD_LOGIC_VECTOR(3 downto 0)
	);
end component;


component CLKDIV is
generic(div: natural := 50000000);
port ( clk_in: in std_logic;
		 clk_out: out std_logic);
end component;
  

signal WregSignal, QSignal, Clk_signal, OBfreeSignal : STD_LOGIC;

begin


uCLKDIV : CLKDIV generic map(2) port map( 
		clk_in => CLK,
		clk_out => Clk_signal
);

uRing_Buffer : Ring_Buffer port map(
					MCLK => Clk_signal,
					reset => reset,
					DAV => DAV,
					CTS => OBfreeSignal,
					DAC => Kack,
					Wreg => WregSignal,
					Din => K,
					Q => QSignal
);


uOutput_Buffer : Output_Buffer port map(
					MCLK => Clk_signal,
					reset => reset,
					Load => WregSignal,
					ACK => ACK,
					Dval => Dval,
					OBfree => OBfreeSignal,
					Din => QSignal,
					Q => Dout
);

end arq_Keyboard_Reader;